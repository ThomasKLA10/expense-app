#!/bin/bash
set -e

echo "=== Installing BB Expense App ==="

# Configure nginx
if [ -f /etc/nginx/sites-available/default ]; then
  rm /etc/nginx/sites-available/default
fi

cat > /etc/nginx/sites-available/expense-app << EOF
server {
    listen 80;
    server_name expense-app.testwerk.org;

    location / {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }

    location /static {
        alias /var/www/expense-app/app/static;
        expires 30d;
    }

    location /uploads {
        alias /var/www/expense-app/app/uploads;
        expires 30d;
    }
}
EOF

ln -sf /etc/nginx/sites-available/expense-app /etc/nginx/sites-enabled/

# Test nginx config
nginx -t

# In Docker, we can't use systemd, so we'll handle services differently
if [ -f /.dockerenv ]; then
    echo "Running in Docker environment, starting services manually"
    
    # Restart nginx without systemd
    nginx -s reload || nginx
    
    # Start the Flask application in the background
    cd /var/www/expense-app
    source venv/bin/activate
    
    # Create a simple startup script
    cat > /var/www/expense-app/start_app.sh << EOF
#!/bin/bash
cd /var/www/expense-app
source venv/bin/activate
python run.py
EOF
    
    chmod +x /var/www/expense-app/start_app.sh
    
    # We'll let the container startup handle running the app
    echo "Application installed successfully. Use /var/www/expense-app/start_app.sh to start the app."
else
    # For non-Docker environments, use systemd
    systemctl restart nginx
    
    # Create and enable systemd service
    cat > /etc/systemd/system/expense-app.service << EOF
[Unit]
Description=BB Expense App
After=network.target

[Service]
User=www-data
WorkingDirectory=/var/www/expense-app
ExecStart=/var/www/expense-app/venv/bin/python run.py
Restart=always

[Install]
WantedBy=multi-user.target
EOF

    systemctl daemon-reload
    systemctl enable expense-app
    systemctl restart expense-app
fi

echo "expense-app.testwerk.org"